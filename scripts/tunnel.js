/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è HTTPS-—Ç—É–Ω–Ω–µ–ª—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram WebApp
 */

const ngrok = require('ngrok');
const fs = require('fs');
const path = require('path');
const config = require('../config/config');

async function startTunnel() {
  try {
    console.log('–ó–∞–ø—É—Å–∫ HTTPS-—Ç—É–Ω–Ω–µ–ª—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º ngrok –∏ –ø–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
    const url = await ngrok.connect({
      addr: config.server.port,
      region: 'eu'
    });
    
    console.log(`‚úÖ HTTPS-—Ç—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${url}`);
    console.log(`–í–∞—à CRM –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: ${url}/app`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const configPath = path.join(__dirname, '../config/config.js');
    let configContent = fs.readFileSync(configPath, 'utf8');
    
    // –ó–∞–º–µ–Ω—è–µ–º URL –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const webViewUrl = `${url}/app`;
    configContent = configContent.replace(
      /url: '.*?',(\s*\/\/\s*.*?\s*)?/,
      `url: '${webViewUrl}', // HTTPS URL –¥–ª—è WebView –≤ Telegram`
    );
    
    fs.writeFileSync(configPath, configContent);
    console.log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞. WebView URL: ${webViewUrl}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –≤ —Ñ–∞–π–ª –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    fs.writeFileSync(path.join(__dirname, '../.tunnel'), webViewUrl);
    
    console.log('\nüîî –í–∞–∂–Ω–æ:');
    console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞, —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
    console.log('2. URL —Ç—É–Ω–Ω–µ–ª—è –∏–∑–º–µ–Ω–∏—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ');
    console.log('3. –ù–∞–∂–º–∏—Ç–µ Ctrl+C, —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
    process.on('SIGINT', async () => {
      console.log('\n–ó–∞–∫—Ä—ã—Ç–∏–µ —Ç—É–Ω–Ω–µ–ª—è...');
      await ngrok.kill();
      process.exit(0);
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—É–Ω–Ω–µ–ª—è:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å
startTunnel();
